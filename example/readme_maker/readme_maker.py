from pydantic_ai import Agent, Tool
from mcpd_sdk import McpdClient
from dotenv import load_dotenv

load_dotenv()  # Load the API key for the agent

agent_model = "gpt-4.1-mini"

# Connect to the MCPD server to enable the agent access the tools running on it.
client = McpdClient(endpoint="http://localhost:8090")

agent = Agent(
    agent_model,
    tools=client.agent_tools(),
    system_prompt="You must use the available GitHub tool to search for a README file, "
                     "create a new branch, create a new README file, and open a Pull Request.",


)

input_repo_readme = input("Enter the GitHub repository (in the format owner/repo-name) to use its README as a template: ")
target_repo = input("Enter the target GitHub repository (in the format owner/repo-name) where the new README should be created: ")


prompt = (f"Create a new README file for the repository {target_repo} using the README "
          f"from {input_repo_readme} as a template. Make sure to use the structure and "
          f"style of the original README, but adapt the content of the new README to "
          f"appropriately describe the target repository by reading all of the codebase."
          f"After you generate the new README, create a new branch in the target repository "
          f"and open a Pull Request with the new README file. Add in the Pull Request description "
          f"that this README was generated by an AI agent ({agent_model}) and link the original README template used.")

agent_trace = agent.run_sync(prompt)
print(agent_trace.output)

